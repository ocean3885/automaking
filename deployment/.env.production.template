# ===================================================================
# Django 기본 설정 (Production)
# ===================================================================

# Django 환경 설정 - Production 모드
DJANGO_SETTINGS_MODULE=automaking.settings.production

# Django Secret Key (필수: 새로운 키로 변경하세요!)
# 생성 방법: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=your-secret-key-here

# 허용된 호스트 (실제 도메인으로 변경하세요, 쉼표로 구분)
# 예: your-domain.com,www.your-domain.com,ec2-xx-xx-xx-xx.compute.amazonaws.com
ALLOWED_HOSTS=your-domain.com

# ===================================================================
# Supabase Database 설정 (Production)
# ===================================================================
# Supabase Dashboard > Project Settings > Database > Connection String 참고

SUPABASE_DB_NAME=postgres
SUPABASE_DB_USER=postgres
SUPABASE_DB_PASSWORD=your-database-password
SUPABASE_DB_HOST=db.xxxxxxxxxxxxx.supabase.co
SUPABASE_DB_PORT=5432

# ===================================================================
# Google Cloud Text-to-Speech API 설정
# ===================================================================
# Google Cloud Console에서 서비스 계정 JSON 키를 다운로드하여 값을 입력하세요

GOOGLE_CLOUD_PROJECT_ID=your-project-id
GOOGLE_CLOUD_PRIVATE_KEY_ID=your-private-key-id
GOOGLE_CLOUD_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYour-Private-Key-Here\n-----END PRIVATE KEY-----\n"
GOOGLE_CLOUD_CLIENT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com
GOOGLE_CLOUD_CLIENT_ID=your-client-id
GOOGLE_CLOUD_CLIENT_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/your-service-account%40your-project.iam.gserviceaccount.com

# ===================================================================
# Google Gemini API 설정
# ===================================================================
# https://makersuite.google.com/app/apikey 에서 발급

GEMINI_API_KEY=your-gemini-api-key

# ===================================================================
# Supabase Storage 설정 (Production) - Media 파일 업로드
# ===================================================================
# Supabase Storage는 S3 호환이므로 AWS S3 설정 변수를 사용합니다.

USE_S3_STORAGE=True

# Supabase 프로젝트 정보 (프라이빗 버킷용)
SUPABASE_URL=https://xxxxxxxxxxxxx.supabase.co
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key-here

# S3 호환 Access Keys (Supabase Dashboard > Project Settings > API > S3 Access Keys)
AWS_S3_ACCESS_KEY_ID=your-s3-access-key-id
AWS_S3_SECRET_ACCESS_KEY=your-s3-secret-access-key

# S3 호환 엔드포인트 URL
AWS_S3_ENDPOINT_URL=https://xxxxxxxxxxxxx.supabase.co/storage/v1/s3

# 버킷 이름 (프라이빗 버킷)
AWS_STORAGE_BUCKET_NAME=your-bucket-name

# Region 
AWS_S3_REGION_NAME=ap-southeast-1

# ===================================================================
# 정적 파일 경로 설정 (Production)
# ===================================================================

STATIC_ROOT=/var/www/automaking/static/

# ===================================================================
# 배포 체크리스트
# ===================================================================
# [ ] SECRET_KEY를 새로운 값으로 변경
# [ ] ALLOWED_HOSTS를 실제 도메인으로 변경
# [ ] Supabase 데이터베이스 연결 정보 입력
# [ ] Supabase Storage SERVICE_ROLE_KEY 입력 (프라이빗 버킷용)
# [ ] Google Cloud TTS 서비스 계정 정보 입력
# [ ] Gemini API 키 입력
# [ ] Supabase Storage 버킷을 Private으로 설정
# [ ] HTTPS 설정 완료 확인 (Let's Encrypt 권장)
# [ ] python manage.py migrate --settings=automaking.settings.production
# [ ] python manage.py collectstatic --settings=automaking.settings.production
# [ ] 관리자 계정 생성: python manage.py createsuperuser --settings=automaking.settings.production
# [ ] Admin에서 UserProfile 생성 및 프리미엄 멤버십 부여
# [ ] 이 파일을 Git에 절대 커밋하지 마세요! (.gitignore 확인)
